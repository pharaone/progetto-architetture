version: "3.9"

services:
  # ================= FastAPI App =================
  menu_service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: menu_service
    command: uvicorn main:app --host 0.0.0.0 --port 9999 --reload
    ports:
      - "9999:9999"
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=menu_service_group
      - ROUTING_SERVICE_URL=http://routing-service:8080
      - DATABASE_URL=postgresql+psycopg2://postgres:example@postgres:5432/menu_db
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=example
      - POSTGRES_DB=menu_db
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - app-network

  # ================= Zookeeper =================
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "zkCli.sh", "-server", "localhost:2181", "ruok"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ================= Kafka =================
  kafka:
    image: bitnami/kafka:3.5.1
    container_name: kafka
    user: root
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - app-network
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--bootstrap-server", "kafka:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ================= PostgreSQL =================
  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=example
      - POSTGRES_DB=menu_db
    ports:
      - "5432:5432"
    networks:
      - app-network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

# ================= Volumes =================
volumes:
  postgres_data:
  kafka_data:

# ================= Network =================
networks:
  app-network:
    driver: bridge
