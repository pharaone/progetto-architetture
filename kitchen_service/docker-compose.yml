x-common-env: &kitchen-common-env
  HOST: 0.0.0.0
  PORT: 8000 # Porta INTERNA del container
  API_PREFIX: /api
  KAFKA_BROKERS_INTERNAL: kafka:29092
  KAFKA_BROKERS_EXTERNAL: localhost:29092
  ETCD_HOST: etcd
  ETCD_PORT: 2379
  REDIS_CLUSTER_NODES: redis-node-1:6379,redis-node-2:6379,redis-node-3:6379
  INTERNAL_API_KEY: changeme123
  WORKERS: 1

services:

  etcd:
    image: bitnamilegacy/etcd:3.5
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
    volumes:
      - etcd-data:/bitnami/etcad
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  redis-node-1:
    image: redis:7-alpine
    volumes:
      - redis-data-1:/data
    command: >
      sh -c "redis-server --bind 0.0.0.0 --port 6379 --cluster-enabled yes 
      --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes 
      --cluster-announce-ip redis-node-1 --cluster-announce-port 6379 --cluster-announce-bus-port 16379"
    healthcheck: &redis-healthcheck
      test: ["CMD", "redis-cli", "-p", "6379", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - app-network

  redis-node-2:
    image: redis:7-alpine
    volumes:
      - redis-data-2:/data
    command: >
      sh -c "redis-server --bind 0.0.0.0 --port 6379 --cluster-enabled yes 
      --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes 
      --cluster-announce-ip redis-node-2 --cluster-announce-port 6379 --cluster-announce-bus-port 16379"
    healthcheck: *redis-healthcheck
    networks:
      - app-network

  redis-node-3:
    image: redis:7-alpine
    volumes:
      - redis-data-3:/data
    command: >
      sh -c "redis-server --bind 0.0.0.0 --port 6379 --cluster-enabled yes 
      --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes 
      --cluster-announce-ip redis-node-3 --cluster-announce-port 6379 --cluster-announce-bus-port 16379"
    healthcheck: *redis-healthcheck
    networks:
      - app-network

  redis-cluster-init:
    image: redis:7-alpine
    depends_on:
      redis-node-1:
        condition: service_healthy
      redis-node-2:
        condition: service_healthy
      redis-node-3:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Waiting for Redis nodes to be ready...' &&
        sleep 5 &&
        echo 'Creating Redis cluster...' &&
        redis-cli --cluster create redis-node-1:6379 redis-node-2:6379 redis-node-3:6379 --cluster-replicas 0 --cluster-yes &&
        echo 'Redis cluster created successfully!' &&
        redis-cli --cluster info redis-node-1:6379
      "
    networks:
      - app-network

  kitchen-service-1: &kitchen-service-base
    build: .
    restart: always
    depends_on:
      etcd:
        condition: service_healthy
      redis-cluster-init:
        condition: service_completed_successfully
    # --- env_file RIMOSSO ---
    ports:
      # Mappa la porta 8001 dell'host alla porta 8000 (definita in PORT) del container
      - "8001:8000"
    environment:
      <<: *kitchen-common-env # <-- Applica le variabili comuni
      # --- Variabile specifica per questo servizio ---
      KITCHEN_ID: 11111111-1111-1111-1111-111111111111
    networks:
      - app-network

  kitchen-service-2:
    <<: *kitchen-service-base # Eredita build, restart, depends_on
    ports:
      - "8002:8000" # Override della porta
    environment:
      <<: *kitchen-common-env # <-- Applica le variabili comuni
      # --- Variabile specifica per questo servizio ---
      KITCHEN_ID: 22222222-2222-2222-2222-222222222222
    networks:
      - app-network

  kitchen-service-3:
    <<: *kitchen-service-base # Eredita build, restart, depends_on
    ports:
      - "8003:8000" # Override della porta
    environment:
      <<: *kitchen-common-env # <-- Applica le variabili comuni
      # --- Variabile specifica per questo servizio ---
      KITCHEN_ID: 33333333-3333-3333-3333-333333333333
    networks:
      - app-network

volumes:
  etcd-data:
  redis-data-1:
  redis-data-2:
  redis-data-3:

networks:
  app-network:
    external: true
